{"version":3,"file":"px-oauth.min.js","sources":["../bower_components/almond/almond.js","../bower_components/ngstorage/ngStorage.min.js","../bower_components/oauth-ng/dist/oauth-ng.js","oauth-module.js","px-oauth-directive.js","main.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license almond 0.3.0 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../bower_components/almond/almond\", function(){});\n\n","/*! ngStorage 0.3.0 | Copyright (c) 2013 Gias Kay Lee | MIT License */\"use strict\";!function(){function a(a){return[\"$rootScope\",\"$window\",function(b,c){for(var d,e,f,g=c[a]||(console.warn(\"This browser does not support Web Storage!\"),{}),h={$default:function(a){for(var b in a)angular.isDefined(h[b])||(h[b]=a[b]);return h},$reset:function(a){for(var b in h)\"$\"===b[0]||delete h[b];return h.$default(a)}},i=0;i<g.length;i++)(f=g.key(i))&&\"ngStorage-\"===f.slice(0,10)&&(h[f.slice(10)]=angular.fromJson(g.getItem(f)));return d=angular.copy(h),b.$watch(function(){e||(e=setTimeout(function(){if(e=null,!angular.equals(h,d)){angular.forEach(h,function(a,b){angular.isDefined(a)&&\"$\"!==b[0]&&g.setItem(\"ngStorage-\"+b,angular.toJson(a)),delete d[b]});for(var a in d)g.removeItem(\"ngStorage-\"+a);d=angular.copy(h)}},100))}),\"localStorage\"===a&&c.addEventListener&&c.addEventListener(\"storage\",function(a){\"ngStorage-\"===a.key.slice(0,10)&&(a.newValue?h[a.key.slice(10)]=angular.fromJson(a.newValue):delete h[a.key.slice(10)],d=angular.copy(h),b.$apply())}),h}]}angular.module(\"ngStorage\",[]).factory(\"$localStorage\",a(\"localStorage\")).factory(\"$sessionStorage\",a(\"sessionStorage\"))}();\ndefine(\"ngstorage\", function(){});\n\n","/* oauth-ng - v0.3.6 - 2014-12-03 */\n\n'use strict';\n\n// App libraries\nvar app = angular.module('oauth', [\n  'oauth.directive',      // login directive\n  'oauth.accessToken',    // access token service\n  'oauth.endpoint',       // oauth endpoint service\n  'oauth.profile',        // profile model\n  'oauth.interceptor'     // bearer token interceptor\n]);\n\nangular.module('oauth').config(['$locationProvider','$httpProvider',\n  function($locationProvider, $httpProvider) {\n    $httpProvider.interceptors.push('ExpiredInterceptor');\n  }]);\n\n'use strict';\n\nvar accessTokenService = angular.module('oauth.accessToken', ['ngStorage']);\n\naccessTokenService.factory('AccessToken', [\"$rootScope\", \"$location\", \"$sessionStorage\", \"$interval\", function($rootScope, $location, $sessionStorage, $interval){\n\n    var service = {\n            token: null\n        },\n        oAuth2HashTokens = [ //per http://tools.ietf.org/html/rfc6749#section-4.2.2\n            'access_token', 'token_type', 'expires_in', 'scope', 'state',\n            'error','error_description'\n        ];\n\n    /**\n     * Returns the access token.\n     */\n    service.get = function(){\n        return this.token;\n    };\n\n    /**\n     * Sets and returns the access token. It tries (in order) the following strategies:\n     * - takes the token from the fragment URI\n     * - takes the token from the sessionStorage\n     */\n    service.set = function(){\n        this.setTokenFromString($location.hash());\n\n        //If hash is present in URL always use it, cuz its coming from oAuth2 provider redirect\n        if(null === service.token){\n            setTokenFromSession();\n        }\n\n        return this.token;\n    };\n\n    /**\n     * Delete the access token and remove the session.\n     * @returns {null}\n     */\n    service.destroy = function(){\n        delete $sessionStorage.token;\n        this.token = null;\n        return this.token;\n    };\n\n\n    /**\n     * Tells if the access token is expired.\n     */\n    service.expired = function(){\n        return (this.token && this.token.expires_at && this.token.expires_at<new Date());\n    };\n\n\n    /**\n     * Get the access token from a string and save it\n     * @param hash\n     */\n    service.setTokenFromString = function(hash){\n        var params = getTokenFromString(hash);\n\n        if(params){\n            removeFragment();\n            setToken(params);\n            setExpiresAt();\n            $rootScope.$broadcast('oauth:login', service.token);\n        }\n    };\n\n   \n    /* * * * * * * * * *\n     * PRIVATE METHODS *\n     * * * * * * * * * */\n   \n    /**\n     * Set the access token from the sessionStorage.\n     */\n    var setTokenFromSession = function(){\n        if($sessionStorage.token){\n            var params = $sessionStorage.token;\n            params.expires_at = new Date(params.expires_at);\n            setToken(params);\n        }\n    };\n\n    /**\n     * Set the access token.\n     *\n     * @param params\n     * @returns {*|{}}\n     */\n    var setToken = function(params){\n        service.token = service.token || {};      // init the token\n        angular.extend(service.token, params);      // set the access token params\n        setTokenInSession();                // save the token into the session\n        setExpiresAtEvent();                // event to fire when the token expires\n\n        return service.token;\n    };\n\n    /**\n     * Parse the fragment URI and return an object\n     * @param hash\n     * @returns {{}}\n     */\n    var getTokenFromString = function(hash){\n        var params = {},\n            regex = /([^&=]+)=([^&]*)/g,\n            m;\n\n        while (m = regex.exec(hash)) {\n            params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n        }\n\n        if(params.access_token || params.error){\n            return params;\n        }\n    };\n\n    /**\n     * Save the access token into the session\n     */\n    var setTokenInSession = function(){\n        $sessionStorage.token = service.token;\n    };\n\n    /**\n     * Set the access token expiration date (useful for refresh logics)\n     */\n    var setExpiresAt = function(){\n        if(service.token){\n            var expires_at = new Date();\n            expires_at.setSeconds(expires_at.getSeconds()+parseInt(service.token.expires_in)-60); // 60 seconds less to secure browser and response latency\n            service.token.expires_at = expires_at;\n        }\n    };\n\n\n    /**\n     * Set the timeout at which the expired event is fired\n     */\n    var setExpiresAtEvent = function(){\n        var time = (new Date(service.token.expires_at))-(new Date());\n        if(time){\n            $interval(function(){\n                $rootScope.$broadcast('oauth:expired', service.token)\n            }, time, 1)\n        }\n    };\n\n    /**\n     * Remove the oAuth2 pieces from the hash fragment\n     */\n    var removeFragment = function(){\n        var curHash = $location.hash();\n        angular.forEach(oAuth2HashTokens,function(hashKey){\n            var re = new RegExp('&'+hashKey+'(=[^&]*)?|^'+hashKey+'(=[^&]*)?&?');\n            curHash = curHash.replace(re,'');\n        });\n\n        $location.hash(curHash);\n    };\n\n\n    return service;\n}]);\n\n'use strict';\n\nvar endpointClient = angular.module('oauth.endpoint', []);\n\nendpointClient.factory('Endpoint', [\"AccessToken\", \"$location\", function(AccessToken, $location) {\n\n  var service = {};\n  var url;\n\n\n  /*\n   * Defines the authorization URL\n   */\n\n  service.set = function(params) {\n    var oAuthScope = (params.scope) ? params.scope : '',\n        state = (params.state) ? encodeURIComponent(params.state) : '',\n        authPathHasQuery = (params.authorizePath.indexOf('?') == -1) ? false : true,\n        appendChar = (authPathHasQuery) ? '&' : '?';    //if authorizePath has ? already append OAuth2 params\n\n    url = params.site +\n          params.authorizePath +\n          appendChar + 'response_type=' + params.responseType + '&' +\n          'client_id=' + encodeURIComponent(params.clientId) + '&' +\n          'redirect_uri=' + encodeURIComponent(params.redirectUri) + '&' +\n          'scope=' + oAuthScope + '&' +\n          'state=' + state;\n\n    return url;\n  };\n\n  /*\n   * Returns the authorization URL\n   */\n\n  service.get = function() {\n    return url;\n  };\n\n\n  /*\n   * Redirects the app to the authorization URL\n   */\n\n  service.redirect = function() {\n    window.location.replace(url);\n  };\n\n  return service;\n}]);\n\n'use strict';\n\nvar profileClient = angular.module('oauth.profile', [])\n\nprofileClient.factory('Profile', [\"$http\", \"AccessToken\", \"$rootScope\", function($http, AccessToken, $rootScope) {\n  var service = {};\n  var profile;\n\n  service.find = function(uri) {\n    var promise = $http.get(uri, { headers: headers() });\n    promise.success(function(response) {\n        profile = response;\n        $rootScope.$broadcast('oauth:profile', profile);\n    });\n    return promise;\n  };\n\n  service.get = function(uri) {\n    return profile;\n  };\n\n  service.set = function(resource) {\n    profile = resource;\n    return profile;\n  };\n\n  var headers = function() {\n    return { Authorization: 'Bearer ' + AccessToken.get().access_token };\n  };\n\n  return service;\n}]);\n\n'use strict';\n\nvar interceptorService = angular.module('oauth.interceptor', []);\n\ninterceptorService.factory('ExpiredInterceptor', [\"$rootScope\", \"$q\", \"$sessionStorage\", function ($rootScope, $q, $sessionStorage) {\n\n  var service = {};\n\n  service.request = function(config) {\n    var token = $sessionStorage.token;\n\n    if (token && expired(token))\n      $rootScope.$broadcast('oauth:expired', token);\n\n    return config;\n  };\n\n  var expired = function(token) {\n    return (token && token.expires_at && new Date(token.expires_at) < new Date())\n  };\n\n  return service;\n}]);\n\n'use strict';\n\nvar directives = angular.module('oauth.directive', []);\n\ndirectives.directive('oauth', [\"AccessToken\", \"Endpoint\", \"Profile\", \"$location\", \"$rootScope\", \"$compile\", \"$http\", \"$templateCache\", function(AccessToken, Endpoint, Profile, $location, $rootScope, $compile, $http, $templateCache) {\n\n  var definition = {\n    restrict: 'AE',\n    replace: true,\n    scope: {\n      site: '@',          // (required) set the oauth server host (e.g. http://oauth.example.com)\n      clientId: '@',      // (required) client id\n      redirectUri: '@',   // (required) client redirect uri\n      responseType: '@',  // (optional) response type, defaults to token (use 'token' for implicit flow and 'code' for authorization code flow\n      scope: '@',         // (optional) scope\n      profileUri: '@',    // (optional) user profile uri (e.g http://example.com/me)\n      template: '@',      // (optional) template to render (e.g bower_components/oauth-ng/dist/views/templates/default.html)\n      text: '@',          // (optional) login text\n      authorizePath: '@', // (optional) authorization url\n      state: '@'          // (optional) An arbitrary unique string created by your app to guard against Cross-site Request Forgery\n    }\n  };\n\n  definition.link = function postLink(scope, element, attrs) {\n    scope.show = 'none';\n\n    scope.$watch('clientId', function(value) { init() });\n\n    var init = function() {\n      initAttributes();          // sets defaults\n      compile();                 // compiles the desired layout\n      Endpoint.set(scope);       // sets the oauth authorization url\n      AccessToken.set(scope);    // sets the access token object (if existing, from fragment or session)\n      initProfile(scope);        // gets the profile resource (if existing the access token)\n      initView();                // sets the view (logged in or out)\n    };\n\n    var initAttributes = function() {\n      scope.authorizePath = scope.authorizePath || '/oauth/authorize';\n      scope.tokenPath     = scope.tokenPath     || '/oauth/token';\n      scope.template      = scope.template      || 'bower_components/oauth-ng/dist/views/templates/default.html';\n      scope.responseType  = scope.responseType  || 'token';\n      scope.text          = scope.text          || 'Sign In';\n      scope.state         = scope.state         || undefined;\n      scope.scope         = scope.scope         || undefined;\n    };\n\n    var compile = function() {\n      $http.get(scope.template, { cache: $templateCache }).success(function(html) {\n        element.html(html);\n        $compile(element.contents())(scope);\n      });\n    };\n\n    var initProfile = function(scope) {\n      var token = AccessToken.get();\n\n      if (token && token.access_token && scope.profileUri) {\n        Profile.find(scope.profileUri).success(function(response) {\n          scope.profile = response\n        })\n      }\n    };\n\n    var initView = function() {\n      var token = AccessToken.get();\n\n      if (!token)             { return loggedOut()  }  // without access token it's logged out\n      if (token.access_token) { return authorized() }  // if there is the access token we are done\n      if (token.error)        { return denied()     }  // if the request has been denied we fire the denied event\n    };\n\n    scope.login = function() {\n      Endpoint.redirect();\n    };\n\n    scope.logout = function() {\n      AccessToken.destroy(scope);\n      $rootScope.$broadcast('oauth:logout');\n      loggedOut();\n    };\n\n    scope.$on('oauth:expired', function() {\n      AccessToken.destroy(scope);\n      scope.show = 'logged-out';\n    });\n\n    // user is authorized\n    var authorized = function() {\n      $rootScope.$broadcast('oauth:authorized', AccessToken.get());\n      scope.show = 'logged-in';\n    };\n\n    // set the oauth directive to the logged-out status\n    var loggedOut = function() {\n      $rootScope.$broadcast('oauth:loggedOut');\n      scope.show = 'logged-out';\n    };\n\n    // set the oauth directive to the denied status\n    var denied = function() {\n      scope.show = 'denied';\n      $rootScope.$broadcast('oauth:denied');\n    };\n\n    // Updates the template at runtime\n    scope.$on('oauth:template:update', function(event, template) {\n      scope.template = template;\n      compile(scope);\n    });\n\n    // Hack to update the directive content on logout\n    // TODO think to a cleaner solution\n    scope.$on('$routeChangeSuccess', function () {\n      init();\n    });\n  };\n\n  return definition\n}]);\n\ndefine(\"oauth-ng\", [\"angular\",\"ngstorage\"], function(){});\n\n","define('oauth-module',['angular', 'angular-ui-router', 'oauth-ng'], function(angular) {\n\n    'use strict';\n\n    var module = angular.module('predix.oauth', ['ui.router', 'oauth'])\n        .config([\"$stateProvider\", function($stateProvider) {\n            $stateProvider\n                .state('secure', {\n                    template: '<ui-view/>',\n                    abstract: true,\n                    resolve: {\n                        token: [\"$q\", \"$rootScope\", \"AccessToken\", \"Endpoint\", function ($q, $rootScope, AccessToken, Endpoint) {\n\n                            var q = $q.defer();\n                            var token = AccessToken.get();\n\n                            // If we have the token, resolve\n                            if (token && token.access_token) {\n                                q.resolve(token);\n                            }\n                            // Otherwise, redirect to the login page\n                            else {\n                                Endpoint.redirect();\n                            }\n\n                            return q.promise;\n                        }]\n                    }\n                });\n        }]);\n\n    return module;\n});\n\n","define('px-oauth-directive',['angular', './oauth-module', 'angular-ui-router', 'oauth-ng'], function (angular, module) {\n    'use strict';\n\n    module.directive('pxOauth', function () {\n        return {\n            scope: {\n                site: '=',         // (required) set the oauth server host (e.g. http://oauth.example.com)\n                clientId: '=',     // (required) client id\n                redirectUri: '='   // (required) client redirect uri\n            },\n            restrict: 'AE',\n            template: '<oauth ng-hide=\"true\" site=\"{{site}}\" client-id=\"{{clientId}}\" redirect-uri=\"{{redirectUri}}\"></oauth>'\n        };\n    });\n\n    return module;\n});\n\n\n","require(['./px-oauth-directive'], function() {});\n\ndefine(\"main\", function(){});\n\n"]}